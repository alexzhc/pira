apiVersion: v1
kind: ConfigMap
metadata:
  name: piraeus-api
  namespace: kube-system
data:
  LS_CONTROLLERS: piraeus-controller.kube-system:3370
  PROXY_CONF: |-
    server {
      listen 3370;
      location / {
        proxy_pass http://${LS_CONTROLLERS};
      }
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: piraeus-api
  namespace: kube-system
spec:
  minReadySeconds: 0
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: piraeus
      app.kubernetes.io/component: piraeus-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: piraeus
        app.kubernetes.io/component: piraeus-api
    spec:
      priorityClassName: system-node-critical
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: proxy
        image: nginx:alpine
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
        ports:
        - name: rest-api
          containerPort: 3370
        envFrom:
        - configMapRef:
            name: piraeus-api
        command:
        - sh
        - -c
        - |-
          envsubst < /envs/PROXY_CONF > /etc/nginx/conf.d/proxy.conf
          nginx -g 'daemon off;'
        readinessProbe:
          successThreshold: 3
          failureThreshold: 3
          httpGet:
            port: 3370
          initialDelaySeconds: 1
          periodSeconds: 1
        volumeMounts:
        - name: localtime
          mountPath: /etc/localtime
        - name: envs
          mountPath: /envs
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: envs
        configMap:
          name: piraeus-api
      - name: nginx-conf
        emptyDir: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: piraeus/enabled
                operator: In
                values:
                - "true"
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
      tolerations:
      - operator: Exists
        effect: NoSchedule
