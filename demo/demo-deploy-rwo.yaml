apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: piraeus
  labels:
    app: nginx
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      name: nginx
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      initContainers:
      - image: nginx:alpine
        imagePullPolicy: IfNotPresent
        name: init
        command:
        - sh
        - -xc
        - |
          echo "<center><h1>Demo volume $( df | grep -E drbd )</h1></center>" \
          > /usr/share/nginx/html/index.html
        volumeMounts:
        - name: html-root
          mountPath: /usr/share/nginx/html
        resources:
          limits:
            cpu: '100m'
            memory: '100Mi'
      containers:
      - image: nginx:alpine
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-root
          mountPath: /usr/share/nginx/html
        resources:
          limits:
            cpu: '100m'
            memory: '100Mi'
      volumes:
      - name: html-root
        persistentVolumeClaim:
          claimName: demo-rwo-r3
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: piraeus/enabled
                operator: In
                values:
                - "true"
              # - key: piraeus/demo-deploy-rwo
              #   operator: In
              #   values:
              #   - "true"
      tolerations:
      - operator: "Exists"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: piraeus
  labels:
    app: nginx
spec:
  type: NodePort
  ports:
    - targetPort: 80
      port: 80
      nodePort: 31279
  selector:
    app: nginx
